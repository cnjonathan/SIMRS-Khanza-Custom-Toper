/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */


package keuangan;

import setting.*;
import fungsi.WarnaTable;
import fungsi.WarnaTablePenjaminan;
import fungsi.akses;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.validasi2;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import surat.SuratKeteranganSehat;

/**
 *
 * @author Christopher Nanda Jonathan the greatest IT in the world ever
 */
public class DlgPenjaminan extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi2 Valid=new validasi2();
    private ResultSet rs;
    private PreparedStatement ps;
    private int i=0;

    /** Creates new form DlgAdmin
     * @param parent
     * @param modal */
    public DlgPenjaminan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(10,10);
        setSize(457,249);

        Object[] row={"No Rawat",
                      "No Nota",
                      "No Surat",
                      "No RM",
                      "Nama Pasien",
                      "Nama Dokter",
                      "Poli",
                      "Pembayaran",
                      "Status",
                      "Tanggal Nota"};
        tabMode=new DefaultTableModel(null,row){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };

        tbNota.setModel(tabMode);
        //tampil();
        //tbJabatan.setDefaultRenderer(Object.class, new WarnaTable(Scroll.getBackground(),Color.GREEN));
        tbNota.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbNota.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 10; i++) {
            TableColumn column = tbNota.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(150); //no rawat
            }else if(i==1){
                column.setPreferredWidth(150); //no nota
            }else if(i==2){
                column.setPreferredWidth(100); //no surat
            }else if(i==3){
                column.setPreferredWidth(100); //no rm
            }else if(i==4){
                column.setPreferredWidth(150); //nama pasien
            }else if(i==5){
                column.setPreferredWidth(200); //nama dokter
            }else if(i==6){
                column.setPreferredWidth(100); //poli
            }else if(i==7){
                column.setPreferredWidth(100); //pembayaran
            }else if(i==8){
                column.setPreferredWidth(100); //status
            }else if(i==9){
                column.setPreferredWidth(250); //tanggal nota 
            }
        }

        tbNota.setDefaultRenderer(Object.class, new WarnaTablePenjaminan());
        
//        txtNorawat.setEditable(false);
//        txtNoNota.setDocument(new batasInput((byte)30).getKata(txtNoNota));
//        txtNoSurat.setDocument(new batasInput((byte)30).getKata(txtNoSurat));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbNota = new widget.Table();
        panelGlass7 = new widget.panelisi();
        jLabel3 = new widget.Label();
        txtNoNota = new widget.TextBox();
        jLabel4 = new widget.Label();
        txtNoRm = new widget.TextBox();
        jLabel5 = new widget.Label();
        txtNorawat = new widget.TextBox();
        txtNoSurat = new widget.TextBox();
        jLabel7 = new widget.Label();
        panelGlass5 = new widget.panelisi();
        jLabel15 = new widget.Label();
        DTPCari1 = new widget.Tanggal();
        jLabel17 = new widget.Label();
        DTPCari2 = new widget.Tanggal();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        jLabel12 = new widget.Label();
        cmbStatus = new widget.ComboBox();
        BtnCari = new widget.Button();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Menu Penjaminan ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbNota.setAutoCreateRowSorter(true);
        tbNota.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbNota.setName("tbNota"); // NOI18N
        tbNota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNotaMouseClicked(evt);
            }
        });
        tbNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbNotaKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbNota);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelGlass7.setName("panelGlass7"); // NOI18N
        panelGlass7.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass7.setLayout(null);

        jLabel3.setText("No Nota");
        jLabel3.setName("jLabel3"); // NOI18N
        panelGlass7.add(jLabel3);
        jLabel3.setBounds(440, 10, 60, 23);

        txtNoNota.setHighlighter(null);
        txtNoNota.setName("txtNoNota"); // NOI18N
        txtNoNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoNotaActionPerformed(evt);
            }
        });
        txtNoNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoNotaKeyPressed(evt);
            }
        });
        panelGlass7.add(txtNoNota);
        txtNoNota.setBounds(510, 10, 250, 23);

        jLabel4.setText("No Surat");
        jLabel4.setName("jLabel4"); // NOI18N
        panelGlass7.add(jLabel4);
        jLabel4.setBounds(760, 10, 60, 23);

        txtNoRm.setName("txtNoRm"); // NOI18N
        txtNoRm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoRmKeyPressed(evt);
            }
        });
        panelGlass7.add(txtNoRm);
        txtNoRm.setBounds(50, 10, 90, 24);

        jLabel5.setText("RM");
        jLabel5.setName("jLabel5"); // NOI18N
        panelGlass7.add(jLabel5);
        jLabel5.setBounds(10, 10, 30, 23);

        txtNorawat.setHighlighter(null);
        txtNorawat.setName("txtNorawat"); // NOI18N
        txtNorawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNorawatActionPerformed(evt);
            }
        });
        txtNorawat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNorawatKeyPressed(evt);
            }
        });
        panelGlass7.add(txtNorawat);
        txtNorawat.setBounds(220, 10, 220, 23);

        txtNoSurat.setName("txtNoSurat"); // NOI18N
        txtNoSurat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoSuratKeyPressed(evt);
            }
        });
        panelGlass7.add(txtNoSurat);
        txtNoSurat.setBounds(840, 10, 230, 24);

        jLabel7.setText("No Rawat");
        jLabel7.setName("jLabel7"); // NOI18N
        panelGlass7.add(jLabel7);
        jLabel7.setBounds(140, 10, 70, 23);

        internalFrame1.add(panelGlass7, java.awt.BorderLayout.PAGE_START);

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel15.setText("Periode :");
        jLabel15.setName("jLabel15"); // NOI18N
        jLabel15.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass5.add(jLabel15);

        DTPCari1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "19-02-2024" }));
        DTPCari1.setDisplayFormat("dd-MM-yyyy");
        DTPCari1.setName("DTPCari1"); // NOI18N
        DTPCari1.setOpaque(false);
        DTPCari1.setPreferredSize(new java.awt.Dimension(90, 23));
        panelGlass5.add(DTPCari1);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("s.d");
        jLabel17.setName("jLabel17"); // NOI18N
        jLabel17.setPreferredSize(new java.awt.Dimension(23, 23));
        panelGlass5.add(jLabel17);

        DTPCari2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "19-02-2024" }));
        DTPCari2.setDisplayFormat("dd-MM-yyyy");
        DTPCari2.setName("DTPCari2"); // NOI18N
        DTPCari2.setOpaque(false);
        DTPCari2.setPreferredSize(new java.awt.Dimension(90, 23));
        panelGlass5.add(DTPCari2);

        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 23));
        panelGlass5.add(jLabel6);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(303, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass5.add(TCari);

        jLabel12.setText("Status Klaim :");
        jLabel12.setName("jLabel12"); // NOI18N
        jLabel12.setPreferredSize(new java.awt.Dimension(120, 23));
        panelGlass5.add(jLabel12);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Semua", "Belum", "Sudah", "Batal" }));
        cmbStatus.setName("cmbStatus"); // NOI18N
        cmbStatus.setPreferredSize(new java.awt.Dimension(150, 23));
        panelGlass5.add(cmbStatus);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('6');
        BtnCari.setToolTipText("Alt+6");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnCari);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setIconTextGap(3);
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass5.add(BtnKeluar);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoNotaKeyPressed
        
}//GEN-LAST:event_txtNoNotaKeyPressed

    private void txtNoRmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoRmKeyPressed
        
}//GEN-LAST:event_txtNoRmKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
                dispose();
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void tbNotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNotaMouseClicked
        if(tabMode.getRowCount()!=0){
            try {
                if(evt.getClickCount()==1){
//                    i=tbNota.getSelectedColumn();
//                    if(i==0){
                        txtNorawat.setText(tbNota.getValueAt(tbNota.getSelectedRow(), 0).toString());
                        txtNoNota.setText(tbNota.getValueAt(tbNota.getSelectedRow(), 1).toString());
                        txtNoSurat.setText(tbNota.getValueAt(tbNota.getSelectedRow(), 2).toString());
                        txtNoRm.setText(tbNota.getValueAt(tbNota.getSelectedRow(), 3).toString());
//                    }
                }else if(evt.getClickCount()==2){
                    if(tbNota.getRowCount()==0){
                        JOptionPane.showMessageDialog(null,"Maaf, data pasien sudah habis...!!!!");
                    }else if(txtNoRm.getText().trim().equals("")){
                        JOptionPane.showMessageDialog(null,"Maaf, Silahkan anda pilih dulu data registrasi pada table...!!!");
                        TCari.requestFocus();
                    }else{
                        if(tbNota.getSelectedRow()!= -1){
                            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            DlgPenjaminanProses proses=new DlgPenjaminanProses(null,false);
//                            proses.isTutup();
                            proses.emptTeks();
                            proses.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight()-20);
                            proses.setLocationRelativeTo(internalFrame1);
                            proses.setData(
                                    tbNota.getValueAt(tbNota.getSelectedRow(), 0).toString(),
                                    tbNota.getValueAt(tbNota.getSelectedRow(), 3).toString(),
                                    tbNota.getValueAt(tbNota.getSelectedRow(), 1).toString(),
                                    tbNota.getValueAt(tbNota.getSelectedRow(), 2).toString()
                            );
//                            proses.tampil();
                            proses.setVisible(true);
                            this.setCursor(Cursor.getDefaultCursor());
                        }
                    }
                }
            } catch (java.lang.NullPointerException e) {
            }
        }
}//GEN-LAST:event_tbNotaMouseClicked

    private void tbNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbNotaKeyPressed
        if(tabMode.getRowCount()!=0){
            if((evt.getKeyCode()==KeyEvent.VK_ENTER)||(evt.getKeyCode()==KeyEvent.VK_UP)||(evt.getKeyCode()==KeyEvent.VK_DOWN)){
                try {
                    getData();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
}//GEN-LAST:event_tbNotaKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        emptTeks();
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampil();
    }//GEN-LAST:event_formWindowOpened

    private void txtNoNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoNotaActionPerformed

    private void txtNorawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNorawatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNorawatActionPerformed

    private void txtNorawatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNorawatKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNorawatKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
//        TabRawatMouseClicked(null);
        tampil();
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
//            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
//            if(TabRawat.getSelectedIndex()==0){
//                tbKasirRalan.requestFocus();
//            }else if(TabRawat.getSelectedIndex()==1){
//                tbKasirRalan2.requestFocus();
//            }
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void txtNoSuratKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoSuratKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoSuratKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgPenjaminan dialog = new DlgPenjaminan(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Tanggal DTPCari1;
    private widget.Tanggal DTPCari2;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.ComboBox cmbStatus;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel12;
    private widget.Label jLabel15;
    private widget.Label jLabel17;
    private widget.Label jLabel3;
    private widget.Label jLabel4;
    private widget.Label jLabel5;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private widget.panelisi panelGlass5;
    private widget.panelisi panelGlass7;
    private widget.Table tbNota;
    private widget.TextBox txtNoNota;
    private widget.TextBox txtNoRm;
    private widget.TextBox txtNoSurat;
    private widget.TextBox txtNorawat;
    // End of variables declaration//GEN-END:variables

    public void tampil() {
        Valid.tabelKosong(tabMode);
        try{
            String date_1 = Valid.SetTgl(DTPCari1.getSelectedItem()+"")+" 00:00:00";
            String date_2 = Valid.SetTgl(DTPCari2.getSelectedItem()+"")+" 23:59:59";
            String search = TCari.getText();
            String status = "";
            
            switch (cmbStatus.getSelectedItem().toString()) {
                case "Semua":
                    status = "";
                    break;
                case "Belum":
                    status = " AND skb.status = 'belum'";
                    break;
                case "Sudah":
                    status = " AND skb.status = 'sudah'";
                    break;
                case "Batal":
                    status = " AND skb.status = 'batal'";
                    break;
                default:
//                    throw new AssertionError();
                    status = " ";
            }
            
            String query_tampil = "SELECT "+
                                    "  skb.no_rawat, "+
                                    "  IFNULL(nj.no_nota, 'Belum Ada') AS no_nota, "+
                                    "  IFNULL(skb.no_surat, 'Belum Ada') AS no_surat, "+
                                    "  rp.no_rkm_medis, "+
                                    "  p.nm_pasien, "+
                                    "  d.nm_dokter, "+
                                    "  poli.nm_poli, "+
                                    "  pj.png_jawab, "+
                                    "  skb.status, "+
                                    "  skb.created_at "+
                                    "FROM "+
                                    "  surat_kontrol_bpjs skb "+
                                    "  LEFT JOIN nota_jalan nj ON skb.no_rawat = nj.no_rawat "+
                                    "  LEFT JOIN reg_periksa rp ON skb.no_rawat = rp.no_rawat "+
                                    "  LEFT JOIN pasien p ON rp.no_rkm_medis = p.no_rkm_medis "+
                                    "  LEFT JOIN dokter d ON rp.kd_dokter = d.kd_dokter "+
                                    "  LEFT JOIN poliklinik poli ON rp.kd_poli = poli.kd_poli "+
                                    "  LEFT JOIN penjab pj ON rp.kd_pj = pj.kd_pj "+
                                    "WHERE "+
                                    "  created_at BETWEEN '"+date_1+"' AND '"+date_2+"'"+
                                    "";
            String query_search = " AND (skb.no_rawat LIKE '%"+search+"%'"+
                                  " OR rp.no_rkm_medis LIKE '%"+search+"%'"+
                                  " OR p.nm_pasien LIKE '%"+search+"%'"+
                                  " OR d.nm_dokter LIKE '%"+search+"%'"+
                                  " OR poli.nm_poli LIKE '%"+search+"%'"+
                                  " OR pj.png_jawab LIKE '%"+search+"%')";
            System.out.println("query_tampil: "+query_tampil+query_search+status);
            ps=koneksi.prepareStatement(query_tampil+query_search+status);
            try {
                rs=ps.executeQuery();
                while(rs.next()){
                    tabMode.addRow(new String[]{
                        rs.getString(1),
                        rs.getString(2),
                        rs.getString(3),
                        rs.getString(4),
                        rs.getString(5),
                        rs.getString(6),
                        rs.getString(7),
                        rs.getString(8),
                        rs.getString(9),
                        rs.getString(10)
                    });
                 }
            } catch (Exception e) {
                System.out.println("Notifikasi : "+e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }

    private void getData() {
        int row=tbNota.getSelectedRow();
        if(row!= -1){
//            String id=tabMode.getValueAt(row,0).toString();
//            String ip_address=tabMode.getValueAt(row,1).toString();
//            String workstation=tabMode.getValueAt(row,2).toString();
//            txtNorawat.setText(id);
//            txtNoNota.setText(workstation);
//            txtNoSurat.setText(ip_address);
        }
    }
    
    public void setData(String no_rawat){
        txtNorawat.setText(no_rawat);
        tampil();
    }

    public void emptTeks() {
        txtNorawat.setText("");
        txtNoNota.setText("");
        txtNoRm.setText("");
        txtNoNota.requestFocus();
    }
    
    public JTable getTable(){
        return tbNota;
    }
}
